*** expat/xmlparse/xmlparse.c.orig	Sun Mar  7 10:33:46 1999
--- expat/xmlparse/xmlparse.c	Sat Mar 13 14:23:36 1999
***************
*** 837,842 ****
--- 837,849 ----
    return errorCode;
  }
  
+ long XML_GetCurrentByteLimit(XML_Parser parser)
+ {
+   if (eventPtr)
+     return parseEndByteIndex - (parseEndPtr - eventEndPtr);
+   return -1;
+ }
+ 
  long XML_GetCurrentByteIndex(XML_Parser parser)
  {
    if (eventPtr)
***************
*** 1180,1188 ****
  	tag->rawName = s + enc->minBytesPerChar;
  	tag->rawNameLength = XmlNameLength(enc, tag->rawName);
  	if (nextPtr) {
! 	  // Need to guarantee that:
! 	  // tag->buf + ROUND_UP(tag->rawNameLength, sizeof(XML_Char)) <= tag->bufEnd - sizeof(XML_Char) 
! 	  if (tag->rawNameLength + (int)(sizeof(XML_Char) - 1) + (int)sizeof(XML_Char) > tag->bufEnd - tag->buf) {
  	    int bufSize = tag->rawNameLength * 4;
  	    bufSize = ROUND_UP(bufSize, sizeof(XML_Char));
  	    tag->buf = realloc(tag->buf, bufSize);
--- 1187,1198 ----
  	tag->rawName = s + enc->minBytesPerChar;
  	tag->rawNameLength = XmlNameLength(enc, tag->rawName);
  	if (nextPtr) {
! 	  /* Need to guarantee that:
! 	  ** tag->buf + ROUND_UP(tag->rawNameLength, sizeof(XML_Char))
!           **      <= tag->bufEnd - sizeof(XML_Char)
! 	  **/
! 	  if (tag->rawNameLength + (int)(sizeof(XML_Char) - 1)
! 	      + (int)sizeof(XML_Char) > tag->bufEnd - tag->buf) {
  	    int bufSize = tag->rawNameLength * 4;
  	    bufSize = ROUND_UP(bufSize, sizeof(XML_Char));
  	    tag->buf = realloc(tag->buf, bufSize);
***************
*** 1195,1200 ****
--- 1205,1211 ----
  	}
  	++tagLevel;
  	if (startElementHandler) {
+ 	  int i;
  	  enum XML_Error result;
  	  XML_Char *toPtr;
  	  for (;;) {
***************
*** 1224,1229 ****
--- 1235,1248 ----
  	  if (result)
  	    return result;
  	  startElementHandler(handlerArg, tag->name.str, (const XML_Char **)atts);
+ 	  for (i = 0;
+ 	       i < attsSize * (sizeof(ATTRIBUTE)/sizeof(XML_Char **));
+ 	       i += 2) {
+ 	    if (! ((XML_Char **) atts)[i])
+ 	      break;
+ 
+ 	    (((XML_Char **) atts)[i])[-1] = 0;
+ 	  }
  	  poolClear(&tempPool);
  	}
  	else {
***************
*** 1255,1262 ****
  	if (result)
  	  return result;
  	poolFinish(&tempPool);
! 	if (startElementHandler)
  	  startElementHandler(handlerArg, name.str, (const XML_Char **)atts);
  	if (endElementHandler) {
  	  if (startElementHandler)
  	    *eventPP = *eventEndPP;
--- 1274,1291 ----
  	if (result)
  	  return result;
  	poolFinish(&tempPool);
! 	if (startElementHandler) {
! 	  int i;
  	  startElementHandler(handlerArg, name.str, (const XML_Char **)atts);
+ 	  for (i = 0;
+ 	       i < attsSize * (sizeof(ATTRIBUTE)/sizeof(XML_Char **));
+ 	       i += 2) {
+ 	    if (! ((XML_Char **) atts)[i])
+ 	      break;
+ 
+ 	    (((XML_Char **) atts)[i])[-1] = 0;
+ 	  }
+ 	}
  	if (endElementHandler) {
  	  if (startElementHandler)
  	    *eventPP = *eventEndPP;
***************
*** 1551,1564 ****
  	      return XML_ERROR_NO_MEMORY;
  	  }
            else {
! 	    (da->id->name)[-1] = 2;
  	    nPrefixes++;
    	    appAtts[attIndex++] = da->id->name;
  	    appAtts[attIndex++] = da->value;
  	  }
  	}
  	else {
! 	  (da->id->name)[-1] = 1;
  	  appAtts[attIndex++] = da->id->name;
  	  appAtts[attIndex++] = da->value;
  	}
--- 1580,1593 ----
  	      return XML_ERROR_NO_MEMORY;
  	  }
            else {
! 	    (da->id->name)[-1] = 6;
  	    nPrefixes++;
    	    appAtts[attIndex++] = da->id->name;
  	    appAtts[attIndex++] = da->value;
  	  }
  	}
  	else {
! 	  (da->id->name)[-1] = 5;
  	  appAtts[attIndex++] = da->id->name;
  	  appAtts[attIndex++] = da->value;
  	}
***************
*** 1569,1575 ****
    i = 0;
    if (nPrefixes) {
      for (; i < attIndex; i += 2) {
!       if (appAtts[i][-1] == 2) {
          ATTRIBUTE_ID *id;
          ((XML_Char *)(appAtts[i]))[-1] = 0;
  	id = (ATTRIBUTE_ID *)lookup(&dtd.attributeIds, appAtts[i], 0);
--- 1598,1604 ----
    i = 0;
    if (nPrefixes) {
      for (; i < attIndex; i += 2) {
!       if ((appAtts[i][-1] & 3) == 2) {
          ATTRIBUTE_ID *id;
          ((XML_Char *)(appAtts[i]))[-1] = 0;
  	id = (ATTRIBUTE_ID *)lookup(&dtd.attributeIds, appAtts[i], 0);
***************
*** 1597,1606 ****
  	((XML_Char *)(appAtts[i]))[-1] = 0;
      }
    }
!   for (; i < attIndex; i += 2)
!     ((XML_Char *)(appAtts[i]))[-1] = 0;
!   if (!tagNamePtr)
      return XML_ERROR_NONE;
    for (binding = *bindingsPtr; binding; binding = binding->nextTagBinding)
      binding->attId->name[-1] = 0;
    if (elementType->prefix) {
--- 1626,1636 ----
  	((XML_Char *)(appAtts[i]))[-1] = 0;
      }
    }
!   if (!tagNamePtr) {
!     for (; i < attIndex; i += 2)
!       ((XML_Char *)(appAtts[i]))[-1] = 0;
      return XML_ERROR_NONE;
+   }
    for (binding = *bindingsPtr; binding; binding = binding->nextTagBinding)
      binding->attId->name[-1] = 0;
    if (elementType->prefix) {
*** expat/xmlparse/xmlparse.h.orig	Sun Mar  7 10:33:26 1999
--- expat/xmlparse/xmlparse.h	Sat Mar 13 14:05:28 1999
***************
*** 428,433 ****
--- 428,434 ----
  int XMLPARSEAPI XML_GetCurrentLineNumber(XML_Parser parser);
  int XMLPARSEAPI XML_GetCurrentColumnNumber(XML_Parser parser);
  long XMLPARSEAPI XML_GetCurrentByteIndex(XML_Parser parser);
+ long XMLPARSEAPI XML_GetCurrentByteLimit(XML_Parser parser);
  
  /* For backwards compatibility with previous versions. */
  #define XML_GetErrorLineNumber XML_GetCurrentLineNumber
