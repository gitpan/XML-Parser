*** expat/xmlparse/xmlparse.h.orig	Wed Jul 28 16:29:36 1999
--- expat/xmlparse/xmlparse.h	Sat Sep 18 18:20:45 1999
***************
*** 506,511 ****
--- 506,524 ----
  
  int XMLPARSEAPI XML_GetCurrentByteCount(XML_Parser parser);
  
+ /* If XML_CONTEXT_BYTES is defined, returns the input buffer, sets
+    the integer pointed to by offset to the offset within this buffer
+    of the current parse position, and sets the integer pointed to by size
+    to the size of this buffer (the number of input bytes). Otherwise
+    returns a null pointer. Also returns a null pointer if a parse isn't active.
+ 
+    NOTE: The character pointer returned should not be used outside
+    the handler that makes the call. */
+ 
+ const char XMLPARSEAPI * XML_GetInputContext(XML_Parser parser,
+ 					     int *offset,
+ 					     int *size);
+ 
  /* For backwards compatibility with previous versions. */
  #define XML_GetErrorLineNumber XML_GetCurrentLineNumber
  #define XML_GetErrorColumnNumber XML_GetCurrentColumnNumber
*** expat/xmlparse/xmlparse.c.orig	Wed Jul 28 16:31:28 1999
--- expat/xmlparse/xmlparse.c	Sat Sep 18 18:22:45 1999
***************
*** 851,856 ****
--- 851,857 ----
      processor = errorProcessor;
      return 0;
    }
+ #ifndef XML_CONTEXT_BYTES
    else if (bufferPtr == bufferEnd) {
      const char *end;
      int nLeftOver;
***************
*** 891,896 ****
--- 892,898 ----
      }
      return 1;
    }
+ #endif  /* not defined XML_CONTEXT_BYTES */
    else {
      memcpy(XML_GetBuffer(parser, len), s, len);
      return XML_ParseBuffer(parser, len, isFinal);
***************
*** 922,931 ****
--- 924,949 ----
    if (len > bufferLim - bufferEnd) {
      /* FIXME avoid integer overflow */
      int neededSize = len + (bufferEnd - bufferPtr);
+ #ifdef XML_CONTEXT_BYTES
+     int keep = bufferPtr - buffer;
+ 
+     if (keep > XML_CONTEXT_BYTES)
+       keep = XML_CONTEXT_BYTES;
+     neededSize += keep;
+ #endif  /* defined XML_CONTEXT_BYTES */
      if (neededSize  <= bufferLim - buffer) {
+ #ifdef XML_CONTEXT_BYTES
+       if (keep < bufferPtr - buffer) {
+ 	int offset = (bufferPtr - buffer) - keep;
+ 	memmove(buffer, &buffer[offset], bufferEnd - bufferPtr + keep);
+ 	bufferEnd -= offset;
+ 	bufferPtr -= offset;
+       }
+ #else
        memmove(buffer, bufferPtr, bufferEnd - bufferPtr);
        bufferEnd = buffer + (bufferEnd - bufferPtr);
        bufferPtr = buffer;
+ #endif  /* not defined XML_CONTEXT_BYTES */
      }
      else {
        char *newBuf;
***************
*** 941,952 ****
--- 959,987 ----
  	return 0;
        }
        bufferLim = newBuf + bufferSize;
+ #ifdef XML_CONTEXT_BYTES
+       if (bufferPtr) {
+ 	int keep = bufferPtr - buffer;
+ 	if (keep > XML_CONTEXT_BYTES)
+ 	  keep = XML_CONTEXT_BYTES;
+ 	memcpy(newBuf, &bufferPtr[-keep], bufferEnd - bufferPtr + keep);
+ 	free(buffer);
+ 	buffer = newBuf;
+ 	bufferEnd = buffer + (bufferEnd - bufferPtr) + keep;
+ 	bufferPtr = buffer + keep;
+       }
+       else {
+ 	bufferEnd = newBuf + (bufferEnd - bufferPtr);
+ 	bufferPtr = buffer = newBuf;
+       }
+ #else
        if (bufferPtr) {
  	memcpy(newBuf, bufferPtr, bufferEnd - bufferPtr);
  	free(buffer);
        }
        bufferEnd = newBuf + (bufferEnd - bufferPtr);
        bufferPtr = buffer = newBuf;
+ #endif  /* not defined XML_CONTEXT_BYTES */
      }
    }
    return bufferEnd;
***************
*** 969,974 ****
--- 1004,1021 ----
    if (eventEndPtr && eventPtr)
      return eventEndPtr - eventPtr;
    return 0;
+ }
+ 
+ const char * XML_GetInputContext(XML_Parser parser, int *offset, int *size)
+ {
+ #ifdef XML_CONTEXT_BYTES
+   if (eventPtr && buffer) {
+     *offset = eventPtr - buffer;
+     *size   = bufferEnd - buffer;
+     return buffer;
+   }
+ #endif /* defined XML_CONTEXT_BYTES */
+   return (char *) 0;
  }
  
  int XML_GetCurrentLineNumber(XML_Parser parser)
